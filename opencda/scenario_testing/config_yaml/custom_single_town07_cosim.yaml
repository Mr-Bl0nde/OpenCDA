description: |-
  Copyright 2021 <UCLA Mobility Lab>
  Author: Runsheng Xu <rxx3386@ucla.edu>
  Modifications: Dustin Smith <dustinsmith720@gmail.com>
  Content: This is the scenario testing configuration file for single vehicle full-stack system in town07 with co-simulation

# First define the basic parameters of the vehicles

vehicle_base:
  sensing:
    perception:
      activate: false #true # when not activated, objects positions will be retrieved from server directly
      camera:
        visualize: 0 #4 # how many camera images need to be visualized. 0 means no visualization for camera. DOES/DOES NOT affect perception, only whether the cameras are visualized for you as simulation is running. Disabling speeds up simulation.
        num: 4 # how many cameras are mounted on the vehicle. Maximum 3(frontal, left and right cameras)
        # relative positions (x,y,z,yaw) of the camera. len(positions) should be equal to camera num
        positions:
          - [2.5, 0, 1.0, 0]
          - [0.0, 0.3, 1.8, 100]
          - [0.0, -0.3, 1.8, -100]
          - [-2.0, 0.0, 1.5, 180]
      lidar:
        visualize: false # DOES/DOES NOT affect perception, only whether the lidar sensors are visualized for you as simulation is running. Disabling speeds up simulation.

    localization:
      activate: true # when not activated, ego position will be retrieved from server directly
      debug_helper:
        show_animation: false # whether to show real-time trajectory plotting
  
  map_manager:
    visualize: false # true # Whether to visualize a rasterized version of the map (BEV bird's eye view window).
    activate: false # true # Disabled BEV rasterized view to cut down on processing time. DOES NOT affect perception processing. 

  behavior:
    ignore_traffic_light: false # whether to ignore traffic light
    collision_time_ahead: 2 # used for collision checking
    local_planner:  # trajectory planning related
      debug: true # whether to draw future/history waypoints
      debug_trajectory: true # whether to draw the trajectory points and path

# define sumo simulation setting for traffic generation
sumo:
  port: ~
  host: ~
  gui: true
  client_order: 1
  step_length: ${world.fixed_delta_seconds}


# define scenario. In this scenario, only a single CAV will be spawned
scenario:
  single_cav_list: # this is for merging vehicle or single cav without v2x
    # - name: cav0
    #   spawn_position: [-40, -62.7, 0.3, 0, 0, 0]
    #   destination: [55.85, 0.5, 0.3] # Works but runs a red light --> [-6, 50, 0.3] # this works --> [0, -226, 0.3] # [15.5,-240.5, 0.3]
    #   v2x:
    #     communication_range: 45
    #   behavior:
    #     sample_resolution: 2.5 # the unit distance between two adjacent waypoints in meter
    #     local_planner:
    #       # buffer_size: 40
    #       # trajectory_update_freq: 4
    #       # waypoint_update_freq: 4
    #       # trajectory_dt: 0.05
    #       # min_dist: 0
    #       debug_trajectory: true
    #       debug: true

    # - name: cav2
    #   spawn_position: [-67, -62.7, 0.3, 0, 0, 0]
    #   destination: [0, -226, 0.3] # [15.5, -240, 0.3]
    #   v2x:
    #     communication_range: 45
    #   behavior:
    #     local_planner:
    #       debug_trajectory: false
    #       debug: false

    # CAV2, starts near j466 and takes a yielding left if green towards j260
    - name: cav1
      spawn_position: [38.0, -3.6, 0.3, 0,180,0]
      destination: [-6.00, 48.00, 0.3, 0,180,0]
      v2x:
        communication_range: 45
      behavior:
        sample_resolution: 2.5
        local_planner:
          debug_trajectory: true
          debug: true

    # CAV3, starts near end of edge 29 and goes through j725 to end of edge 25. Vulnerable to left turners that don't yield properly
    - name: cav2
      spawn_position: [-85.00, 0.50, 0.3, 0,0,0]
      destination: [52.25, 0.3, 0.3, 0,0,0]
      v2x:
        communication_range: 45
      behavior:
        sample_resolution: 2.5
        local_planner:
          debug_trajectory: true
          debug: true
